version: "3.8"

services:
  db:
    image: mysql:8.0
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: schedul_pass
      MYSQL_DATABASE: schedulai
      MYSQL_USER: root
      MYSQL_PASSWORD: scheduler_pass
    ports:
      - "3306:3306"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

  scheduling_engine:
    build:
      context: .
      dockerfile: services/scheduling_engine/Dockerfile
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: schedul_pass
      DB_NAME: schedulai
    expose:
      - "5001"

  conflict_detector:
    build:
      context: .
      dockerfile: services/conflict_detector/Dockerfile
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: schedul_pass
      DB_NAME: schedulai
    expose:
      - "5002"

  analytics:
    build:
      context: .
      dockerfile: services/analytics/Dockerfile
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: schedul_pass
      DB_NAME: schedulai
    expose:
      - "5003"

  web:
    build:
      context: .
      dockerfile: services/web/Dockerfile
    depends_on:
      - scheduling_engine
      - conflict_detector
      - analytics
      - db
      - redis
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: schedul_pass
      DB_NAME: schedulai
      REDIS_URL: redis://redis:6379
      SCHEDULING_ENGINE_URL: http://scheduling_engine:5001
      CONFLICT_DETECTOR_URL: http://conflict_detector:5002
      ANALYTICS_URL: http://analytics:5003
      SECRET_KEY: change-me
    # override to use eventlet
    command: >
      gunicorn
      -k eventlet
      -w 1
      --bind 0.0.0.0:5000
      app:app
    expose:
      - "5000"

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    depends_on:
      - web
      - scheduling_engine
      - conflict_detector
      - analytics
    ports:
      - "80:80"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - default
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=Secret123   # change to your secure admin password
    networks:
      - default
    ports:
      - "3000:3000"

volumes:
  db_data:
  grafana-storage: